		hibernate.connection.url=jdbc:mysql://localhost:3306/apartmentdb
		hibernate.connection.username=root
		hibernate.connection.password=pass9



SessionFactory: (org.hibernate.SessionFactory):
(i)  Thread safe and immutable representation of the mapping of the application domain model to a database. Acts as factory for org.hibernate.SessionFactory instances.
(ii)  The EntityManagerFactory is the JPA equivalent of a SessionFactory and basically those two converge into the same Sessionfactory implementation.
(iii) SessionFactory is very expensive to create, so , for any given database, the application should have only one associated SessionFactory.
(iv)  SessionFactory maintains services that Hibernate uses across all Session(s) such as second level caches. connection pools, transaction system integration, etc.


Session: (org.hibernate.Session):
(i)   A single threaded , short lived object. 
(ii)  In JPA nomenclature, the Session is represented by an EntityManager. 
(iii) Behind the scenes, the Hibernate Session wraps a JDBC java.sql.Connection an acts as a factory for org.hibernate.Transaction instances. 
(iv)  It maintains a generally "repeatable read" persistence context (first level cache) of the application domain model.


Transaction (org.hibernate.Transaction):
(i)   A single threaded, short lived object used by the application to demarcate individual physical transaction boundaries. 
(ii)  Entity transaction is the JPA equivalent and both act as an abstraction API to isolate the application from the underlying transaction system in use (JDBC or JTA).
